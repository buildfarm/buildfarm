"""Buildfarm build and test"""

module(
    name = "build_buildfarm",
    repo_name = "build_buildfarm",
)

bazel_dep(name = "aspect_bazel_lib", version = "2.10.0")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "blake3", version = "1.5.4")
bazel_dep(name = "buildifier_prebuilt", version = "8.0.1")
bazel_dep(name = "gazelle", version = "0.42.0")
bazel_dep(name = "grpc-java", version = "1.67.1")
bazel_dep(name = "googleapis", version = "0.0.0-20240819-fe8ba054a")
bazel_dep(name = "grpc-proto", version = "0.0.0-20240627-ec30f58", repo_name = "io_grpc_grpc_proto")
bazel_dep(name = "hermetic_cc_toolchain", version = "3.1.1")
bazel_dep(name = "platforms", version = "0.0.11")
bazel_dep(name = "protobuf", version = "29.0-rc3")
bazel_dep(name = "rules_cc", version = "0.1.0")
bazel_dep(name = "rules_go", version = "0.52.0")
bazel_dep(name = "rules_java", version = "8.7.1")
bazel_dep(name = "rules_jvm_external", version = "6.6")
bazel_dep(name = "rules_license", version = "1.0.0")
bazel_dep(name = "rules_oci", version = "2.2.1")
bazel_dep(name = "rules_pkg", version = "1.0.1")

# Test dependencies
bazel_dep(
    name = "container_structure_test",
    version = "1.19.1",
    dev_dependency = True,
)

# TODO: remove this after https://github.com/bazelbuild/remote-apis/pull/293 is merged
bazel_dep(name = "bazel_remote_apis", version = "6777112ef7defa6705b1ebd2831d6c7efeb12ba2", repo_name = "remoteapis")
archive_override(
    module_name = "bazel_remote_apis",
    integrity = "sha256-PTtx9Vz9LjLvvUhv/n4QnksoD19BfqoFssrb3QvxcSE=",
    strip_prefix = "remote-apis-6777112ef7defa6705b1ebd2831d6c7efeb12ba2",
    urls = [
        "https://github.com/bazelbuild/remote-apis/archive/6777112ef7defa6705b1ebd2831d6c7efeb12ba2.zip",
    ],
)

toolchains = use_extension("@hermetic_cc_toolchain//toolchain:ext.bzl", "toolchains")
use_repo(toolchains, "zig_sdk")

register_toolchains(
    "@zig_sdk//toolchain:linux_amd64_gnu.2.31",
    "@zig_sdk//toolchain:linux_arm64_gnu.2.31",
)

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = [
        # keep sorted
        "com.amazonaws:aws-java-sdk-core",  # Version is specified via the BOM below
        "com.amazonaws:aws-java-sdk-s3",
        "com.amazonaws:aws-java-sdk-secretsmanager",
        "com.fasterxml.jackson.core:jackson-databind:2.18.2",
        "com.github.ben-manes.caffeine:caffeine:3.1.8",
        "com.github.docker-java:docker-java",
        "com.github.docker-java:docker-java-api",
        "com.github.docker-java:docker-java-core",
        "com.github.jnr:jffi:1.3.13",
        "com.github.jnr:jffi:jar:native:1.3.13",
        "com.github.jnr:jnr-constants:0.10.4",
        "com.github.jnr:jnr-ffi:2.2.17",
        "com.github.jnr:jnr-posix:3.1.20",
        "com.github.luben:zstd-jni:1.5.6-7",
        "com.github.oshi:oshi-core:6.6.5",
        "com.github.pcj:google-options:1.0.0",
        "com.github.serceman:jnr-fuse:0.5.8",
        "com.google.api.grpc:proto-google-common-protos:2.29.0",
        "com.google.auth:google-auth-library-credentials",  # Version is specified via the BOM below
        "com.google.auth:google-auth-library-oauth2-http",  # Version is specified via the BOM below
        "com.google.code.findbugs:jsr305:3.0.2",
        "com.google.code.gson:gson:2.11.0",
        "com.google.errorprone:error_prone_annotations:2.36.0",
        "com.google.errorprone:error_prone_core:2.36.0",
        "com.google.guava:failureaccess:1.0.2",
        "com.google.guava:guava:33.3.1-jre",
        "com.google.j2objc:j2objc-annotations:3.0.0",
        "com.google.protobuf:protobuf-java:3.19.1",
        "com.google.protobuf:protobuf-java-util:3.19.1",
        "com.owteam.engUtils:netrc:2.0.1",
        "commons-io:commons-io:2.18.0",
        "io.grpc:grpc-api",  # Version is specified via the BOM below
        "io.grpc:grpc-auth",
        "io.grpc:grpc-context",
        "io.grpc:grpc-core",
        "io.grpc:grpc-netty",
        "io.grpc:grpc-netty-shaded",
        "io.grpc:grpc-protobuf",
        "io.grpc:grpc-services",
        "io.grpc:grpc-stub",
        "io.grpc:grpc-testing",
        "io.netty:netty-buffer",  # Version is specified via the BOM below
        "io.netty:netty-codec",
        "io.netty:netty-codec-http",
        "io.netty:netty-codec-http2",
        "io.netty:netty-codec-socks",
        "io.netty:netty-common",
        "io.netty:netty-handler",
        "io.netty:netty-handler-proxy",
        "io.netty:netty-resolver",
        "io.netty:netty-transport",
        "io.netty:netty-transport-classes-epoll",
        "io.netty:netty-transport-classes-kqueue",
        "io.netty:netty-transport-native-epoll",
        "io.netty:netty-transport-native-kqueue",
        "io.netty:netty-transport-native-unix-common",
        "io.prometheus:simpleclient:0.16.0",
        "io.prometheus:simpleclient_hotspot:0.16.0",
        "io.prometheus:simpleclient_httpserver:0.16.0",
        "javax.annotation:javax.annotation-api:1.3.2",
        "me.dinowernli:java-grpc-prometheus:0.6.0",
        "net.javacrumbs.future-converter:future-converter-java8-guava:1.2.0",
        "net.jcip:jcip-annotations:1.0",
        "org.apache.commons:commons-compress:1.27.1",
        "org.apache.commons:commons-lang3:3.17.0",
        "org.apache.commons:commons-pool2:2.12.0",
        "org.apache.httpcomponents:httpclient:4.5.14",
        "org.apache.tomcat:annotations-api:6.0.53",
        "org.bouncycastle:bcprov-jdk15on:1.70",
        "org.checkerframework:checker-qual:3.48.2",
        "org.jetbrains:annotations:26.0.1",
        "org.mockito:mockito-core:5.14.2",
        "org.openjdk.jmh:jmh-core:1.37",
        "org.openjdk.jmh:jmh-generator-annprocess:1.37",
        "org.projectlombok:lombok:1.18.36",
        "org.redisson:redisson:3.39.0",
        "org.slf4j:slf4j-simple:2.0.16",
        "org.threeten:threetenbp:1.7.0",
        "org.xerial:sqlite-jdbc:3.47.0.0",
        "org.yaml:snakeyaml:2.3",
        "redis.clients:jedis:5.2.0",
    ],
    boms = [
        # keep sorted
        "com.amazonaws:aws-java-sdk-bom:1.12.544",
        "com.github.docker-java:docker-java-bom:3.3.3",
        "com.google.auth:google-auth-library-bom:1.23.0",
        "io.grpc:grpc-bom:1.62.2",
        "io.netty:netty-bom:4.1.108.Final",
    ],
    fail_if_repin_required = True,  # TO RE-PIN: REPIN=1 bazel run @unpinned_maven//:pin
    generate_compat_repositories = True,
    lock_file = "//:maven_install.json",
    repositories = [
        "https://repo.maven.apache.org/maven2",
    ],
    resolver = "maven",
    strict_visibility = True,
)

# Test only maven dependencies
[
    maven.artifact(
        testonly = True,
        artifact = artifact,
        group = group,
        version = version,
    )
    for group, artifact, version in [coord.split(":") for coord in [
        "com.github.fppt:jedis-mock:1.0.13",
        "com.google.jimfs:jimfs:1.3.0",
        "com.google.truth:truth:1.4.2",
        "junit:junit:4.13.2",
    ]]
]

use_repo(
    maven,
    "maven",
    "unpinned_maven",
)

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")

# Server base image
oci.pull(
    name = "amazon_corretto_java_image_base",
    digest = "sha256:efbf26f3d4105684429a74842d742683a99215c6ec304c6ff0faa9e493bb4329",
    image = "public.ecr.aws/amazoncorretto/amazoncorretto",
    platforms = [
        "linux/amd64",
        "linux/arm64/v8",
    ],
    tag = "21",
)

# Worker base image
oci.pull(
    name = "ubuntu_noble",  # aka 24
    digest = "sha256:f18e19d1329c0df38dd5f6bfd931c7764fa1e3acf6b3280da62015a338805ce8",
    image = "index.docker.io/bazelbuild/buildfarm-worker-base",
    platforms = [
        "linux/amd64",
        "linux/arm64",
    ],
    tag = "noble",
)
use_repo(
    oci,
    "amazon_corretto_java_image_base",
    "amazon_corretto_java_image_base_linux_amd64",
    "amazon_corretto_java_image_base_linux_arm64_v8",
    "ubuntu_noble",
    "ubuntu_noble_linux_amd64",
    "ubuntu_noble_linux_arm64",
)

# https://github.com/bazelbuild/rules_python/pull/713#issuecomment-1885628496
# Satisfy running tests in Docker as root.
bazel_dep(name = "rules_python", version = "1.0.0")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    configure_coverage_tool = False,
    ignore_root_user_error = True,
    python_version = "3.11",
)

build_deps = use_extension("//:extensions.bzl", "build_deps")
use_repo(
    build_deps,
    "bazel",
    "opentelemetry",
    "skip_sleep",
    "tini",
    "tini_arm64v8",
)

# this is *only* required for bazel and should not be used in our repository
bazel_dep(name = "rules_proto", version = "6.0.2")

googleapis_switched_rules = use_extension("@googleapis//:extensions.bzl", "switched_rules")
googleapis_switched_rules.use_languages(
    grpc = True,
    java = True,
)
use_repo(googleapis_switched_rules, "com_google_googleapis_imports")

find_rpm = use_extension("@rules_pkg//toolchains/rpm:rpmbuild_configure.bzl", "find_system_rpmbuild_bzlmod")
use_repo(find_rpm, "rules_pkg_rpmbuild")

register_toolchains("@rules_pkg_rpmbuild//:all")
